<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>scratchpad on greaysweater42&#39;s cookbook</title>
    <link>https://greysweater42.github.io/categories/scratchpad/</link>
    <description>Recent content in scratchpad on greaysweater42&#39;s cookbook</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 31 May 2019 15:29:17 +0200</lastBuildDate>
    
	<atom:link href="https://greysweater42.github.io/categories/scratchpad/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>tensorflow_serving</title>
      <link>https://greysweater42.github.io/tensorflow_serving/</link>
      <pubDate>Fri, 31 May 2019 15:29:17 +0200</pubDate>
      
      <guid>https://greysweater42.github.io/tensorflow_serving/</guid>
      <description>#!/usr/bin/python3 import tensorflow as tf from tensorflow.python.saved_model import builder as saved_model_builder from tensorflow.python.saved_model import signature_constants from tensorflow.python.saved_model import signature_def_utils from tensorflow.python.saved_model import tag_constants from tensorflow.python.saved_model.utils import build_tensor_info placeholder_name = &#39;a&#39; operation_name = &#39;add&#39; a = tf.placeholder(tf.int32, name=placeholder_name) b = tf.constant(10) # This is our model add = tf.add(a, b, name=operation_name) with tf.Session() as sess: # super complicated model ten_plus_two = sess.run(add, feed_dict={a: 2}) print(&#39;10 + 2 = {}&#39;.format(ten_plus_two)) # od tego momentu robimy wszystko, zeby zapisac model # inputy i outputy chcemy przetworzyc do zapisywalnego formatu # najpierw robimy z nich tensory a_tensor = sess.</description>
    </item>
    
    <item>
      <title>passing arguments to scripts</title>
      <link>https://greysweater42.github.io/passing_arguments/</link>
      <pubDate>Tue, 05 Feb 2019 09:34:23 +0100</pubDate>
      
      <guid>https://greysweater42.github.io/passing_arguments/</guid>
      <description># This is not a proper blog post yet, just my notes. passing arguments (TODO)
 caffee
R A good article on passing arguments to R scripts
You can read the docs of commandArgs for more info, but the general use is very simple:
args &amp;lt;- commandArgs(trailingOnly = TRUE) print(args) # args is a vector of values Rscript file.R one two 3 If trailingOnly is set to FALSE, args will contain some other argument values, e.</description>
    </item>
    
    <item>
      <title>pandas</title>
      <link>https://greysweater42.github.io/pandas/</link>
      <pubDate>Fri, 25 Jan 2019 13:46:12 +0100</pubDate>
      
      <guid>https://greysweater42.github.io/pandas/</guid>
      <description>This is not a proper blog post yet, just my notes.   &amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;
1. What is pandas and why would you use it?  pandas is a Python package created for working with tables known as DataFrames;
 it is the only reasonable Python package for this purpose, which makes Python a little modest comparing to R (base, data.table, dplyr - every one of them has a better interface than pandas) when we process tables;</description>
    </item>
    
    <item>
      <title>redis</title>
      <link>https://greysweater42.github.io/redis/</link>
      <pubDate>Sun, 21 Oct 2018 20:49:20 +0200</pubDate>
      
      <guid>https://greysweater42.github.io/redis/</guid>
      <description># This is not a proper blog post yet, just my notes. redis (TODO)
 docker pull redis import redis import pandas as pd # https://www.youtube.com/watch?v=Hbt56gFj998 # https://redis-py.readthedocs.io/en/latest/ # open up a redis-server session in redis/src/redis-server redis_host = &amp;quot;localhost&amp;quot; redis_port = 6379 redis_password = &amp;quot;&amp;quot; r = redis.StrictRedis(host=redis_host, port=redis_port, password=redis_password, decode_responses=True) r.flushall() # save data to redis d = {key: str(value) for key, value in zip(list(&#39;abcdefghij&#39;), range(10))} for key, value in d.</description>
    </item>
    
  </channel>
</rss>